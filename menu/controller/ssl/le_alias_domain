#!/bin/bash

######################################################################
#           Auto Install & Optimize LEMP Stack on CentOS            #
#                                                                    #
#                Author: HOSTVN Technical Team                       #
#                  Website: https://hostvn.vn                        #
#                                                                    #
#              Please do not remove copyright. Thank!                #
#  Please do not copy under any circumstance for commercial reason!  #
######################################################################

source /var/hostvn/menu/validate/rule
source /var/hostvn/menu/helpers/function
source /var/hostvn/menu/helpers/variable_common
source /var/hostvn/menu/helpers/menu

_validate() {
    check_nginx_status
    check_a_record "${domain}"
}

_select_alias_domain() {
    domain=""
    if [[ "$(ls -A "${ALIAS_DIR}")" ]]; then
        domains=()
        echo "${LIST_DOMAIN}"
        cd "${ALIAS_DIR}" || exit
        for alias_entry in *.conf; do
            domain=${alias_entry//.conf/}
            if [[ ! -d "${SSL_DIR}/${domain}" && (! -s "${SSL_DIR}/${domain}/cert.pem" && ! -s "${SSL_DIR}/${domain}/key.pem" ) ]]; then
                domains+=("${domain}")
            fi
        done
        if [ ${#domains[@]} -eq 0 ]; then
            ALERT=$(printf "%s\n" "${RED}Toan bo Alias domain da duoc cau hinh SSL.${NC}")
        else
            echo "Lua chon website"
            PS3="${INPUT_SELECT} [0 = Thoat]: "
            select alias_opt in "${domains[@]}"; do
                domain=$alias_opt
                break
            done
        fi
    else
        ALERT=$(printf "%s\n" "${RED}Khong ton tai Alias domain nao tren VPS.${NC}")
    fi
}

_confirm_sign_ssl() {
    printf "${RED}%s${NC}\n" "Luu y: Let's Encrypt gioi han so request SSL vi vay viec tao qua nhieu request SSL se bi chan ko tao duoc SSL."
    while true; do
        read -r -p "Ban muon cai dat SSL cho Domain ${domain} ? (y/n) " promt_sign_ssl
        sleep 3
        echo
        if [[ "${promt_sign_ssl}" =~ ^([yY])$ || "${promt_sign_ssl}" =~ ^([nN])$ ]]; then
            break
        else
            printf "%s\n" "${RED}Gia tri khong chinh xac. Vui long nhap lai.${NC}"
        fi
    done
}

_sign_ssl() {
    if [ -d "/root/.acme.sh/${domain}" ]; then
        rm -rf /root/.acme.sh/"${domain}"
    fi
    
    # Clean up any existing ECC certificates
    if [ -d "/root/.acme.sh/${domain}_ecc" ]; then
        rm -rf /root/.acme.sh/"${domain}_ecc"
    fi
    
    /root/.acme.sh/acme.sh --upgrade
    clear

    # Issue certificate with error checking
    /root/.acme.sh/acme.sh --issue --nginx "${ALIAS_DIR}"/"${domain}".conf -d "${domain}" --server letsencrypt --force
    ssl_command_result=$?
    
    if [ $ssl_command_result -ne 0 ]; then
        printf "%s\n" "${RED}Loi: Khong the tao chung chi SSL cho alias domain ${domain}.${NC}"
        return 1
    fi

    # Verify certificate files exist before installation
    cert_path="/root/.acme.sh/${domain}"
    if [ -d "/root/.acme.sh/${domain}_ecc" ]; then
        cert_path="/root/.acme.sh/${domain}_ecc"
    fi

    if [[ ! -f "${cert_path}/${domain}.cer" || ! -f "${cert_path}/${domain}.key" ]]; then
        printf "%s\n" "${RED}Loi: Khong tim thay file chung chi cho domain ${domain}.${NC}"
        return 1
    fi

    if [ ! -d "${SSL_DIR}/${domain}" ]; then
        mkdir -p "${SSL_DIR}"/"${domain}"
    fi

    if [ -f "${SSL_DIR}/${domain}/key.pem" ]; then
        rm -rf "${SSL_DIR}"/"${domain}"/key.pem
    fi

    if [ -f "${SSL_DIR}/${domain}/cert.pem" ]; then
        rm -rf "${SSL_DIR}"/"${domain}"/cert.pem
    fi

    # Install certificate with error checking
    /root/.acme.sh/acme.sh --install-cert -d "${domain}" \
        --key-file "${SSL_DIR}"/"${domain}"/key.pem \
        --fullchain-file "${SSL_DIR}"/"${domain}"/cert.pem
    install_result=$?
    
    if [ $install_result -ne 0 ]; then
        printf "%s\n" "${RED}Loi: Khong the cai dat chung chi SSL cho ${domain}.${NC}"
        return 1
    fi

    return 0
}

_edit_vhost() {
    sed -i "/listen 80;/a include ${NGINX_CONF_DIR}/extra/https.conf;" "${ALIAS_DIR}"/"${domain}".conf

    sed -i '/return 404;/d' "${ALIAS_DIR}"/"${domain}".conf
    sed -i '/error_page 404/d' "${VHOST_DIR}"/"${domain}".conf
    sed -i '/ssl_certificate/d' "${ALIAS_DIR}"/"${domain}".conf
    sed -i '/ssl_certificate_key/d' "${ALIAS_DIR}"/"${domain}".conf

    sed -i "/listen 443/a ssl_certificate ${SSL_DIR}/${domain}/cert.pem;" "${ALIAS_DIR}"/"${domain}".conf
    sed -i "/listen 443/a ssl_certificate_key ${SSL_DIR}/${domain}/key.pem;" "${ALIAS_DIR}"/"${domain}".conf
}

_run() {
    _validate

    if [ -z "${ALERT}" ]; then
        _select_alias_domain
        if [[ -z "${domain}" && -z "${ALERT}" ]]; then
            clear
            printf "%s\n" "${RED}Ban da chon huy thao tac.${NC}"
        else
            if [ -z "${ALERT}" ]; then
                _confirm_sign_ssl
                if [[ "${promt_sign_ssl}" =~ ^([yY])$ ]]; then
                    _sign_ssl
                    sleep 5
                    if [[ -s "${SSL_DIR}/${domain}/cert.pem" && -s "${SSL_DIR}/${domain}/key.pem" ]]; then
                        _edit_vhost
                        restart_service
                        clear
                        printf "%s\n" "${GREEN}Cai dat SSL thanh cong.${NC}"
                        printf "%s\n" "${GREEN}Chung chi SSL se tu dong gia han truoc khi het han.${NC}"
                    else
                        clear
                        printf "%s\n" "${RED}Cai dat SSL that bai. Co the do domain chua tro ve IP VPS.${NC}"
                        printf "%s\n" "${RED}Vui long kiem tra lai.${NC}"
                    fi
                else
                    clear
                    printf "%s\n" "${RED}Ban da chon huy thao tac.${NC}"
                fi
            else
                clear
                printf "%s\n" "${ALERT}"
            fi
        fi
    else
        clear
        printf "%s\n" "${ALERT}"
    fi
}

ALERT=""
domain=""
promt_sign_ssl=""

_run
menu_ssl
